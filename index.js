require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ .env —Ñ–∞–π–ª—É
const token = process.env.TELEGRAM_BOT_TOKEN;

if (!token) {
    console.error('TELEGRAM_BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    process.exit(1);
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: true });

// –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫
bot.on('polling_error', (error) => {
    console.error('–ü–æ–º–∏–ª–∫–∞ polling:', error);
});

bot.on('error', (error) => {
    console.error('–ü–æ–º–∏–ª–∫–∞ –±–æ—Ç–∞:', error);
});

console.log('–ë–æ—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ! Username:', bot.options.username || '–Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ');

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
bot.onText(/\/start/, (msg) => {
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /start –≤—ñ–¥:', msg.from.username || msg.from.first_name);
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, '–ü—Ä–∏–≤—ñ—Ç! –Ø Telegram –±–æ—Ç. –Ø–∫ —Å–ø—Ä–∞–≤–∏?')
        .then(() => console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /start –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
        .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è /start:', err));
});

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /time
bot.onText(/\/time/, (msg) => {
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /time –≤—ñ–¥:', msg.from.username || msg.from.first_name);
    const chatId = msg.chat.id;
    const now = new Date();
    const timeOptions = {
        timeZone: 'Europe/Kiev',
        year: 'numeric',
        month: '2-digit',
        day: '2-digit',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit'
    };
    const timeString = now.toLocaleDateString('uk-UA', timeOptions);
    
    bot.sendMessage(chatId, `üïê –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å: ${timeString}`)
        .then(() => console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /time –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
        .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è /time:', err));
});

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /joke
bot.onText(/\/joke/, (msg) => {
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /joke –≤—ñ–¥:', msg.from.username || msg.from.first_name);
    const chatId = msg.chat.id;
    
    const jokes = [
        "–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –Ω–µ –ª—é–±–ª—è—Ç—å –ø—Ä–∏—Ä–æ–¥—É? –¢–∞–º –∑–∞–±–∞–≥–∞—Ç–æ –±–∞–≥—ñ–≤! üêõ",
        "–Ø–∫ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è —Å–æ–±–∞–∫–∞ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∞? –ö–æ–ª–∏-–∫–æ–¥–µ—Ä! üêï",
        "–ß–æ–º—É JavaScript —Ä–æ–∑–ø–ª–∞–∫–∞–≤—Å—è? –ë–æ –π–æ–≥–æ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –Ω–µ–º–æ–∂–ª–∏–≤–æ! üò¢",
        "–°–∫—ñ–ª—å–∫–∏ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± –≤–∫—Ä—É—Ç–∏—Ç–∏ –ª–∞–º–ø–æ—á–∫—É? –ñ–æ–¥–Ω–æ–≥–æ - —Ü–µ –∞–ø–∞—Ä–∞—Ç–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞! üí°",
        "–©–æ —Å–∫–∞–∑–∞–≤ HTML, –∫–æ–ª–∏ –ø–æ–±–∞—á–∏–≤ CSS? –¢–∏ –º–µ–Ω–µ –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª—è—î—à! üíÖ"
    ];
    
    const randomJoke = jokes[Math.floor(Math.random() * jokes.length)];
    
    bot.sendMessage(chatId, `üòÑ ${randomJoke}`)
        .then(() => console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /joke –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
        .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è /joke:', err));
});

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /calc
bot.onText(/\/calc (.+)/, (msg, match) => {
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /calc –≤—ñ–¥:', msg.from.username || msg.from.first_name);
    const chatId = msg.chat.id;
    const expression = match[1];
    
    try {
        // –ë–µ–∑–ø–µ—á–Ω–µ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ –±–∞–∑–æ–≤–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π
        const sanitized = expression.replace(/[^0-9+\-*/().\s]/g, '');
        if (sanitized !== expression) {
            throw new Error('–ù–µ–¥–æ–∑–≤–æ–ª–µ–Ω—ñ —Å–∏–º–≤–æ–ª–∏');
        }
        
        const result = eval(sanitized);
        bot.sendMessage(chatId, `üßÆ ${expression} = ${result}`)
            .then(() => console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /calc –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
            .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è /calc:', err));
    } catch (error) {
        bot.sendMessage(chatId, '‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—á–∏—Å–ª–µ–Ω–Ω—ñ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç—ñ–ª—å–∫–∏ —á–∏—Å–ª–∞ —Ç–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó +, -, *, /, ()')
            .then(() => console.log('–ü–æ–º–∏–ª–∫–∞ calc –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
            .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ calc:', err));
    }
});

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /weather
bot.onText(/\/weather(.*)/, async (msg, match) => {
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /weather –≤—ñ–¥:', msg.from.username || msg.from.first_name);
    const chatId = msg.chat.id;
    const city = match[1] ? match[1].trim() : '–ö–∏—ó–≤';
    
    try {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π API OpenWeatherMap
        // –ó–∞–º—ñ–Ω—ñ—Ç—å YOUR_API_KEY –Ω–∞ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –∫–ª—é—á –∑ openweathermap.org
        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {
            params: {
                q: city,
                appid: process.env.WEATHER_API_KEY || 'demo_key',
                units: 'metric',
                lang: 'uk'
            }
        });
        
        const weather = response.data;
        const temp = Math.round(weather.main.temp);
        const feelsLike = Math.round(weather.main.feels_like);
        const description = weather.weather[0].description;
        const humidity = weather.main.humidity;
        const windSpeed = weather.wind.speed;
        
        const weatherText = `üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ ${weather.name}:
        
üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C (–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ ${feelsLike}¬∞C)
üìù –û–ø–∏—Å: ${description}
üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å: ${humidity}%
üí® –í—ñ—Ç–µ—Ä: ${windSpeed} –º/—Å`;
        
        bot.sendMessage(chatId, weatherText)
            .then(() => console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /weather –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
            .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è /weather:', err));
            
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏:', error.message);
        
        let errorMessage = '‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É.';
        
        if (process.env.WEATHER_API_KEY === 'demo_key' || !process.env.WEATHER_API_KEY) {
            errorMessage = `‚ùå –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø–æ–≥–æ–¥–æ—é –ø–æ—Ç—Ä—ñ–±–µ–Ω API –∫–ª—é—á –≤—ñ–¥ OpenWeatherMap.

üìù –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è:
1. –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—è –Ω–∞ openweathermap.org
2. –û—Ç—Ä–∏–º–∞–π—Ç–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π API –∫–ª—é—á
3. –î–æ–¥–∞–π—Ç–µ WEATHER_API_KEY=–≤–∞—à_–∫–ª—é—á –¥–æ .env —Ñ–∞–π–ª—É

üéØ –ü–æ–∫–∏ —â–æ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —ñ–Ω—à—ñ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞!`;
        } else if (error.response && error.response.status === 404) {
            errorMessage = `‚ùå –ú—ñ—Å—Ç–æ "${city}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—É –Ω–∞–∑–≤—É.`;
        }
        
        bot.sendMessage(chatId, errorMessage)
            .then(() => console.log('–ü–æ–º–∏–ª–∫–∞ weather –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
            .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ weather:', err));
    }
});

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help
bot.onText(/\/help/, (msg) => {
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–º–∞–Ω–¥—É /help –≤—ñ–¥:', msg.from.username || msg.from.first_name);
    const chatId = msg.chat.id;
    
    const inlineKeyboard = {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: 'üïê –ß–∞—Å', callback_data: 'time' },
                    { text: 'üòÑ –ñ–∞—Ä—Ç', callback_data: 'joke' }
                ],
                [
                    { text: 'üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', callback_data: 'calc_help' },
                    { text: 'üå§Ô∏è –ü–æ–≥–æ–¥–∞', callback_data: 'weather_help' }
                ]
            ]
        }
    };
    
    const helpText = `
ü§ñ –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:

/start - –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
/help - –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
/time - –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
/joke - –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∂–∞—Ä—Ç
/calc <–≤–∏—Ä–∞–∑> - –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: /calc 2+2)
/weather [–º—ñ—Å—Ç–æ] - –ø–æ–≥–æ–¥–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: /weather –õ—å–≤—ñ–≤)

–¢–∞–∫–æ–∂ –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ:
    `;
    
    bot.sendMessage(chatId, helpText, inlineKeyboard)
        .then(() => console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ /help –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
        .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è /help:', err));
});

// –û–±—Ä–æ–±–Ω–∏–∫ callback-—ñ–≤ –≤—ñ–¥ inline –∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (callbackQuery) => {
    const msg = callbackQuery.message;
    const chatId = msg.chat.id;
    const data = callbackQuery.data;
    
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ callback:', data, '–≤—ñ–¥:', callbackQuery.from.username || callbackQuery.from.first_name);
    
    switch (data) {
        case 'time':
            const now = new Date();
            const timeOptions = {
                timeZone: 'Europe/Kiev',
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            };
            const timeString = now.toLocaleDateString('uk-UA', timeOptions);
            bot.editMessageText(`üïê –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å: ${timeString}`, {
                chat_id: chatId,
                message_id: msg.message_id
            });
            break;
            
        case 'joke':
            const jokes = [
                "–ß–æ–º—É –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –Ω–µ –ª—é–±–ª—è—Ç—å –ø—Ä–∏—Ä–æ–¥—É? –¢–∞–º –∑–∞–±–∞–≥–∞—Ç–æ –±–∞–≥—ñ–≤! üêõ",
                "–Ø–∫ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è —Å–æ–±–∞–∫–∞ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∞? –ö–æ–ª–∏-–∫–æ–¥–µ—Ä! üêï",
                "–ß–æ–º—É JavaScript —Ä–æ–∑–ø–ª–∞–∫–∞–≤—Å—è? –ë–æ –π–æ–≥–æ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –Ω–µ–º–æ–∂–ª–∏–≤–æ! üò¢",
                "–°–∫—ñ–ª—å–∫–∏ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± –≤–∫—Ä—É—Ç–∏—Ç–∏ –ª–∞–º–ø–æ—á–∫—É? –ñ–æ–¥–Ω–æ–≥–æ - —Ü–µ –∞–ø–∞—Ä–∞—Ç–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞! üí°",
                "–©–æ —Å–∫–∞–∑–∞–≤ HTML, –∫–æ–ª–∏ –ø–æ–±–∞—á–∏–≤ CSS? –¢–∏ –º–µ–Ω–µ –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª—è—î—à! üíÖ"
            ];
            const randomJoke = jokes[Math.floor(Math.random() * jokes.length)];
            bot.editMessageText(`üòÑ ${randomJoke}`, {
                chat_id: chatId,
                message_id: msg.message_id
            });
            break;
            
        case 'calc_help':
            bot.editMessageText(`üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
            
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /calc <–≤–∏—Ä–∞–∑>
–ü—Ä–∏–∫–ª–∞–¥–∏:
‚Ä¢ /calc 2+2
‚Ä¢ /calc 10*5-3
‚Ä¢ /calc (15+5)/4

–ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó: +, -, *, /, ()`, {
                chat_id: chatId,
                message_id: msg.message_id
            });
            break;
            
        case 'weather_help':
            bot.editMessageText(`üå§Ô∏è –ü–æ–≥–æ–¥–∞

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: /weather [–Ω–∞–∑–≤–∞ –º—ñ—Å—Ç–∞]
–ü—Ä–∏–∫–ª–∞–¥–∏:
‚Ä¢ /weather - –ø–æ–≥–æ–¥–∞ –≤ –ö–∏—î–≤—ñ
‚Ä¢ /weather –õ—å–≤—ñ–≤
‚Ä¢ /weather London

üí° –î–ª—è —Ä–æ–±–æ—Ç–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω API –∫–ª—é—á –≤—ñ–¥ openweathermap.org`, {
                chat_id: chatId,
                message_id: msg.message_id
            });
            break;
    }
    
    // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è callback
    bot.answerCallbackQuery(callbackQuery.id);
});

// –û–±—Ä–æ–±–Ω–∏–∫ –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
bot.on('message', (msg) => {
    console.log('–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', {
        from: msg.from.username || msg.from.first_name,
        text: msg.text,
        chat_id: msg.chat.id
    });
    
    const chatId = msg.chat.id;
    const messageText = msg.text;

    // –Ü–≥–Ω–æ—Ä—É—î–º–æ –∫–æ–º–∞–Ω–¥–∏ (–≤–æ–Ω–∏ –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è –æ–∫—Ä–µ–º–æ)
    if (messageText && messageText.startsWith('/')) {
        return;
    }

    // –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ –∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    bot.sendMessage(chatId, `–í–∏ –Ω–∞–ø–∏—Å–∞–ª–∏: ${messageText}`)
        .then(() => console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'))
        .catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', err));
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...');